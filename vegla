#include <iostream>
#include <string>
#include <vector>

using namespace std;

struct LlogariaBankare {
    string emri;
    int numriLlogarise;
    double bilanci;
    vector<string> historiaTransaksioneve;
};

LlogariaBankare krijoLlogari(string emri, int numri, double shumaFillestare) {
    LlogariaBankare llogaria = {emri, numri, shumaFillestare, {"Llogaria u krijua me " + to_string(shumaFillestare) + " EUR"}};
    return llogaria;
}


LlogariaBankare depozito(LlogariaBankare &llogaria, double shuma) {
    if (shuma > 0) {
        llogaria.bilanci += shuma;
        llogaria.historiaTransaksioneve.push_back("Depozituar: " + to_string(shuma) + " EUR");
    }
    return llogaria;
}


LlogariaBankare terhiq(LlogariaBankare &llogaria, double shuma) {
    if (shuma > 0 && shuma <= llogaria.bilanci) {
        llogaria.bilanci -= shuma;
        llogaria.historiaTransaksioneve.push_back("Terhequr: " + to_string(shuma) + " EUR");
    } else {
        llogaria.historiaTransaksioneve.push_back("Tentative e pasuksesshme per terheqje: " + to_string(shuma) + " EUR");
    }
    return llogaria;
}

double shfaqBilancin(const LlogariaBankare &llogaria) {
    return llogaria.bilanci;
}

bool transfero(LlogariaBankare &nga, LlogariaBankare &tek, double shuma) {
    if (shuma > 0 && shuma <= nga.bilanci) {
        nga.bilanci -= shuma;
        tek.bilanci += shuma;
        nga.historiaTransaksioneve.push_back("Transferuar: " + to_string(shuma) + " EUR tek llogaria " + to_string(tek.numriLlogarise));
        tek.historiaTransaksioneve.push_back("Pranuar: " + to_string(shuma) + " EUR nga llogaria " + to_string(nga.numriLlogarise));
        return true;
    }
    return false;
}

void shfaqHistorine(const LlogariaBankare &llogaria) {
    cout << "Historia e transaksioneve per llogarine " << llogaria.numriLlogarise << ":\n";
    
    for (const string &transaksion : llogaria.historiaTransaksioneve) {
              cout << "- " << transaksion << endl;
}
}


LlogariaBankare llogaritInteresin(LlogariaBankare &llogaria, double normaInteresi) {
    if (normaInteresi > 0) {
        double interesi = llogaria.bilanci * (normaInteresi / 100);
        llogaria.bilanci += interesi;
        llogaria.historiaTransaksioneve.push_back("Aplikuar interes: " + to_string(interesi) + " EUR");
    }
    return llogaria;
}
int main() {
    LlogariaBankare llogaria1 = krijoLlogari("Arben", 1001, 500.0);
    LlogariaBankare llogaria2 = krijoLlogari("Erisa", 1002, 300.0);
llogaria1 = depozito(llogaria1, 200.0);
    llogaria1 = terhiq(llogaria1, 150.0);
    transfero(llogaria1, llogaria2, 100.0);
    llogaritInteresin(llogaria1, 5.0);

